{"version":3,"sources":["webpack:///./src/templates/blog-post-single.js"],"names":["useStyles","makeStyles","h1","marginTop","spacer","marginBottom","BlogPageSingle","data","pageContext","post","contentfulPost","previous","next","classes","console","log","title","fluid","image","objectFit","alt","variant","component","gutterBottom","className","author","createdAt","dangerouslySetInnerHTML","__html","content","childContentfulRichText","html","style","display","flexWrap","justifyContent","listStyle","padding","margin","to","slug","rel","color","pageQuery"],"mappings":"4FAAA,6NAkBMA,EAAYC,YAAW,CAC3BC,GAAI,CACFC,UAAW,QAEbC,OAAQ,CACND,UAAW,OACXE,aAAc,UAuEHC,UAnEQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAExBC,EAAOF,EAAKG,eACZC,EAAWH,EAAYG,SACvBC,EAAOJ,EAAYI,KACnBC,EAAUb,IAKhB,OAFAc,QAAQC,IAAIJ,GAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKK,MAAOP,EAAKO,QACjB,kBAAC,IAAD,CACEC,MAAOR,EAAKS,MAAMD,MAClBE,UAAU,QACVC,IAAKX,EAAKS,MAAMF,QAGlB,kBAAC,IAAD,CAAYK,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAACC,UAAWX,EAAQX,IACrEO,EAAKO,OAER,kBAAC,IAAD,CAAYK,QAAQ,WAAWE,cAAY,GAA3C,MACMd,EAAKgB,OADX,iBACiChB,EAAKiB,WAGtC,kBAAC,IAAD,CAASL,QAAQ,YAAYG,UAAWX,EAAQT,SAEhD,kBAAC,IAAD,CAAYiB,QAAQ,QAAQE,cAAY,EAACI,wBAAyB,CAAEC,OAAQnB,EAAKoB,QAAQC,wBAAwBC,QAIjH,6BACE,wBACEC,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,GACTC,OAAQ,IAGV,4BACG3B,GACC,kBAAC,OAAD,CAAM4B,GAAI5B,EAAS6B,KAAMC,IAAI,QAC3B,kBAAC,IAAD,CAAQC,MAAM,WACZ,kBAAC,IAAD,MADF,IACuB/B,EAASK,SAKtC,4BACGJ,GACC,kBAAC,OAAD,CAAM2B,GAAI3B,EAAK4B,KAAMC,IAAI,QACvB,kBAAC,IAAD,CAAQC,MAAM,WACX9B,EAAKI,MADR,IACe,kBAAC,IAAD,aAcxB,IAAM2B,EAAS","file":"component---src-templates-blog-post-single-js-82e764975b105562e20f.js","sourcesContent":["import React from 'react'\n\nimport { Link, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport Button from '@material-ui/core/Button';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider'\n\n\n\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\n\nconst useStyles = makeStyles({\n  h1: {\n    marginTop: '20px'\n  },\n  spacer: {\n    marginTop: '20px',\n    marginBottom: '20px'\n  }\n});\n\nconst BlogPageSingle = ({ data, pageContext }) => {\n\n  const post = data.contentfulPost\n  const previous = pageContext.previous\n  const next = pageContext.next\n  const classes = useStyles();\n\n\n  console.log(previous)\n\n  return (\n    <Layout >\n      <SEO title={post.title} />\n      <Img\n        fluid={post.image.fluid}\n        objectFit=\"cover\"\n        alt={post.image.title}\n      />\n\n      <Typography variant=\"h2\" component=\"h2\" gutterBottom className={classes.h1}>\n        {post.title}\n      </Typography>\n      <Typography variant=\"overline\" gutterBottom>\n        By {post.author} | Written on {post.createdAt}\n      </Typography>\n\n      <Divider variant=\"fullwidth\" className={classes.spacer} />\n\n      <Typography variant=\"body1\" gutterBottom dangerouslySetInnerHTML={{ __html: post.content.childContentfulRichText.html }}></Typography>\n\n      {/* Begin Pagination */}\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 30,\n            margin: 0\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.slug} rel=\"prev\">\n                <Button color=\"primary\">\n                  <ChevronLeftIcon /> {previous.title}\n                </Button>\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.slug} rel=\"next\">\n                <Button color=\"primary\">\n                  {next.title} <ChevronRightIcon />\n                </Button>\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout >\n  )\n}\n\nexport default BlogPageSingle\n\n\nexport const pageQuery = graphql`\n  query ContentfulBlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    contentfulPost( slug: { eq: $slug}) {\n      title\n      author\n      createdAt\n      subtitle\n      content {\n        childContentfulRichText {\n          html\n        }\n      }\n      image {\n        fluid(maxHeight: 900) {\n          ...GatsbyContentfulFluid\n        }\n        title\n      }\n    }\n  }\n`"],"sourceRoot":""}